import "sys.base";
import "sys.list";
import "sys.proc";
import "sys.task";
import "sys.string";

g_set_process_desc("time routine");
var pid = g_get_pid();
var share = g_wait_share("PID#" + pid);
g_stop_share("PID#" + pid);
var args = share["args"];

var arg1 = args[0];

var in = g_create_pipe("PIPEIN#" + pid);
var out = g_create_pipe("PIPEOUT#" + pid);

var signal = "PIDSIG#" + pid;
g_start_share(signal, true);

if (g_is_null(arg1)) { // 无参：当前时间
    var get_time = func ~() -> g_task_get_fast("system", "now");
    for (; g_query_share(signal);) {
        g_write_pipe(out, "" + get_time() + "\r");
        g_task_sleep(1);
    }
    g_write_pipe(out, g_endl);
} else if (arg1 == "a") { // 有参：程序运行计时
    var begin_time = g_task_get_fast_arg("system", "now", "timestamp");
    g_read_pipe_args(in, lambda(ch, out) -> g_write_pipe(out, ch), out);
    var end_time = g_task_get_fast_arg("system", "now", "timestamp");
    var period = end_time - begin_time;
    g_printn("Running time: " + period + "ms");
    g_write_pipe(out, g_endl + " ** Running time: " + period + "ms" + g_endl);

    /*
      # 比如，输入命令“range 1 1000 | grep 1 | count | time a”，一般打印出2500ms左右的结果。
    */
} else if (arg1 == "sys") {
    var get_time = func ~() -> g_task_get_fast("system", "speed");
    for (; g_query_share(signal);) {
        g_write_pipe(out, "" + get_time() + "\r");
        g_task_sleep(1);
    }
    g_write_pipe(out, g_endl);
} else {
    g_writeln_pipe(out, "Invalid command");
}

g_stop_share(signal);

g_destroy_pipe(out);
g_destroy_pipe(in);
