import "sys.base";
import "sys.list";
import "sys.proc";
import "sys.task";
import "sys.remote";

call g_set_process_desc("hitokoto ui");
call g_set_process_priority(81);

call g_printn("Running...");

var first = false;
var init = func ~() {
    call g_task_get_fast_arg("ui", "path", "\uffeeM 100 200\uffee\uffeel 500 0\uffee\uffeel 0 150\uffee\uffeel -500 0\uffee\uffeel 0 -150\uffee");
};
var destroy = func ~() {
    call g_task_get_fast_arg("ui", "path", "\uffeeM 100 200\uffee\uffeeR 601 351\uffee");
};

var draw = func ~() {
    if (!first) {
        call init();
        let first = true;
    }
    var obj = call g_task_get_fast_arg("net", "get_json", "http://api.hitokoto.cn/?c=a&encode=json");
    if (call g_is_null(obj)) { call g_task_sleep(10); return; }
    var text = " —— " + call g_map_get(obj, "from") + " —— \n" + call g_map_get(obj, "hitokoto");
    //var text = "test string for debug";
    call g_task_get_fast_arg("ui", "path", "\uffeeM 101 201\uffee\uffeeR 599 349\uffee\uffeeM 140 230\uffee\uffeeW 450\uffee\uffec" + text + "\uffec");
    call g_task_sleep_signal(8, "TASK#SLEEP");
};
var clear = func ~() {
    if (first) {
        call destroy();
        let first = false;
    }
};

call g_start_share("UI_SWITCH#hitokoto", g_false);

while (call g_query_share("UI#hitokoto")) {
    if (call g_query_share("UI_SWITCH#hitokoto")) {
        call draw();
    } else {
        call clear();
        call g_task_sleep_signal(8, "TASK#SLEEP");
    }
}

call g_stop_share("UI_SWITCH#hitokoto");
call g_stop_share("UI#hitokoto");

call g_printn("Exit.");