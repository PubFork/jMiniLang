import "sys.base";
import "sys.list";
import "sys.proc";
import "sys.remote";
import "sys.task";

// IRQ: 3
var no = 3;
call g_set_process_desc("signal task");
call g_set_process_priority(10 + no);

call g_printn("Running...");

var destroy_int = func ~() {
    var tt = call g_query_share("TASK#TABLE");
    var tn = call g_query_share("TASK#NAMELIST");
    // 确保任务和中断依次退出
    // 1. stop task
    call g_printn("Stopping service...");
    call g_stop_share("TASK#LIST");
    foreach (var i : call g_range(0, 15)) { // ! ModuleTask.TASK_NUM - 1
        if (!call g_is_null(call g_array_get(tt, i))) {
            var tid = call g_array_get(tn, i);
            call g_task_get_fast(tid, "#SHUTDOWN#");
            var handle = call g_create_pipe("TASKSEND#" + i);
            call g_write_pipe(handle, 'E');
        }
    }
    call g_join_process_array(call g_query_share("TASK#PIDS"));
    call g_stop_share("TASK#PIDS");
    // 2. stop irq
    call g_printn("Stopping irq...");
    foreach (var j : call g_range(0, 3)) { // ! INT_NUM
        var _state_ = call g_query_share("IRQ#ON." + j);
        call g_array_set(_state_, 0, false);
        var handle = call g_create_pipe("int#" + j);
        call g_destroy_pipe(handle);
        call g_sleep(20);
    }
    call g_join_process_array(call g_query_share("IRQ#PIDS"));
    call g_stop_share("IRQ#PIDS");
    call g_printn("Good bye.");
};
var handler = func ~(ch) {
     if (ch == 'E') {
         call g_create_process(destroy_int);
         call g_printn("*** System halt!");
     }
};

var state = [];
call g_array_add(state, true);
call g_start_share("IRQ#ON." + no, state);
var handle = call g_create_pipe("int#" + no);
for (;;) {
    call g_read_pipe(handle, handler);
    call g_sleep(10 + no);
    var _state_ = call g_query_share("IRQ#ON." + no);
    var on = call g_array_get(_state_, 0);
    if (!on) { break; }
}

call g_printn("Exit.");