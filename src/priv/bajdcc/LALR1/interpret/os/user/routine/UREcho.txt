import "sys.base";
import "sys.list";
import "sys.string";
import "sys.proc";
import "sys.ui";

g_set_process_desc("echo routinue");
var pid = g_get_pid();
var share = g_wait_share("PID#" + pid);
g_stop_share("PID#" + pid);
var args = g_map_get(share, "args");

var in = g_create_pipe("PIPEIN#" + pid);
var out = g_create_pipe("PIPEOUT#" + pid);

if (g_array_empty(args)) {
    g_read_pipe_args(in, lambda(ch, out) -> g_write_pipe(out, ch), out);
} else {
    foreach (var i : g_range_array(args)) {
        foreach (var j : g_range_string(i)) {
            g_write_pipe(out, j);
        }
        g_write_pipe(out, g_endl);
    }
}

g_sleep(50);

g_destroy_pipe(out);
g_destroy_pipe(in);