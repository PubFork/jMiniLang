import "sys.base";
import "sys.proc";
import "sys.list";
import "sys.file";

g_set_process_desc("load routinue");
var pid = g_get_pid();
var share = g_wait_share("PID#" + pid);
g_stop_share("PID#" + pid);
var args = g_map_get(share, "args");

var in = g_create_pipe("PIPEIN#" + pid);
var out = g_create_pipe("PIPEOUT#" + pid);

var signal = "PIDSIG#" + pid;
g_start_share(signal, true);

if (g_array_empty(args)) {
    g_write_pipe(out, "USAGE: < [filename] [encoding=u/g/a]" + g_endl);
} else {
    var filename = g_array_get(args, 0);
    var function = "g_read_file_utf8_args";
    if (g_array_size(args) > 1) {
        var enc = g_array_get(args, 1);
        if (enc == "u") {
            //function := "g_read_file_utf8_args";
        } else if (enc == "g") {
            function := "g_read_file_gbk_args";
        } else if (enc == "a") {
            function := "g_read_file_ascii_args";
        }
    }
    var callback = func ~(ch, out) {
        g_write_pipe(out, ch);
    };
    if (!function(filename, callback, out)) {
        g_write_pipe(out, "Error: Read file failed!" + g_endl);
    }
    //g_write_pipe(out, '\n');
}

g_sleep(50);

g_stop_share(signal);

g_destroy_pipe(out);
g_destroy_pipe(in);