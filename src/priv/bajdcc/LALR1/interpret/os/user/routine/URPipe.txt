import "sys.base";
import "sys.proc";
import "sys.list";
import "sys.string";

call g_set_process_desc("pipe routinue");

var pid = call g_get_pid();
var in = call g_create_pipe("PIPEIN#" + pid);
var out = call g_create_pipe("PIPEOUT#" + pid);

var share = call g_wait_share("PID#" + pid);
call g_stop_share("PID#" + pid);
var args = call g_map_get(share, "args");

if (call g_array_empty(args)) {
    var pipe = func ["PIPE"] ~(ch, out) {
        call g_write_pipe(out, ch);
    };
    call g_read_pipe_args(in, pipe, out);
} else {
    var time = call g_array_get(args, 0);
    let time = call g_string_atoi(time);
    if (time < 1) { let time = 1; }
    var pipe = func ["PIPE"] ~(ch, out) {
        call g_write_pipe(out, ch);
        call g_sleep(time);
    };
    call g_read_pipe_args(in, pipe, out);
}

call g_destroy_pipe(out);